%
LoadPackage( "ModulePresentations" );
LoadPackage( "ModelCategories" );
LoadPackage( "TriangulatedCategoriesForCAP" );
%
ReadPackage( "ModelCategories", "examples/tools/left_homotopy_in_complexes_of_l_p_over_comm_homalg_ring.g" );
ReadPackage( "ModelCategories", "examples/tools/Triangulated_Structure.g" );
%
R := HomalgFieldOfRationalsInSingular()*"x,y,z";;
%
cat := LeftPresentations( R: FinalizeCategory := false );
AddEpimorphismFromSomeProjectiveObject( cat, CoverByFreeModule );
SetIsAbelianCategoryWithEnoughProjectives( cat, true );
AddIsProjective( cat, function( P ) 
                        return not Lift( IdentityMorphism( P ), CoverByFreeModule( P ) ) = fail;
                      end );
Finalize( cat );
%
chains := ChainComplexCategory( cat : FinalizeCategory := false );
ModelStructureOnChainComplexes( chains );
AddLift( chains, compute_lifts_in_chains );
AddColift( chains, compute_colifts_in_chains );

## These are general categorical operation, not only in context of Model categories.
AddIsNullHomotopic( chains, phi -> IsZeroForMorphisms( phi ) or Colift( NaturalInjectionInMappingCone( IdentityMorphism( Source( phi ) ) ), phi ) <> fail );
AddHomotopyMorphisms( chains, compute_homotopy_chain_morphisms_for_null_homotopic_morphism );

AddAreLeftHomotopic( chains, 
    function( phi, psi )
        return IsNullHomotopic( phi - psi );
        #return is_left_homotopic_to_null( phi - psi );
    end );

Finalize( chains );
%
homotopy_chains := HomotopyCategory( chains :FinalizeCategory := false );
AddTriangulatedStructure( homotopy_chains );
Finalize( homotopy_chains );
%
m := HomalgMatrix( "[ x,y,0,z,-x,y ]", 2, 3, R );
%
n := HomalgMatrix( "[ x+y,x-y,z,y,0,-x,0,z ]", 4, 2, R );
%
M := AsLeftPresentation( m );
%
N := AsLeftPresentation( n );
%
CM := StalkChainComplex( M, 1 );
%
CN := StalkChainComplex( N, 1 );
%
G_MN := GeneratorsOfExternalHom( CM, CN );
%
Cf := Random( G_MN );
%
# In theory the natural embedding of range in the mapping cylinder is quasi-isomorphism :)
#
phi := NaturalInjectionOfRangeInMappingCylinder( Cf );
%
h_phi := AsMorphismInHomotopyCategory( phi );
%
IsIsomorphism( h_phi );
%
h_psi := Inverse( h_phi );
%
IsCongruentForMorphisms( PreCompose( h_phi, h_psi ), IdentityMorphism( Source( h_phi ) ) );
%
IsCongruentForMorphisms( PreCompose( h_psi, h_phi ), IdentityMorphism( Source( h_psi ) ) );
%
Display( h_psi );
%
quasi_1_to_CN := AcyclicFibrationFromCofibrantModel( Range( phi ) );
Q1 := Source( quasi_1_to_CN );
%
quasi_2_to_CN := PreCompose( AcyclicFibrationFromCofibrantModel( CN ), phi );
Q2 := Source( quasi_2_to_CN );
%
#
#
#      e ------------------> Q1
#      |                  /  |
#      |             /       | quasi_1_to_CN
#      |        /            |
#      V   /                 V
#      Q2 -----------------> cylinder
#           quasi_2_to_CN
#
%
L := Lifting( UniversalMorphismFromInitialObject( Q2 ), quasi_1_to_CN,
              UniversalMorphismFromInitialObject( Q1 ), quasi_2_to_CN  );
%
Display( L );